{"version":3,"sources":["context/alertas/alertaContext.js","context/autentificacion/authContext.js","components/auth/Login.js","components/auth/NuevaCuenta.js","components/layout/barra.js","context/proyectos/proyectoContext.js","context/tareas/tareaContext.js","components/proyectos/Proyecto.js","components/proyectos/ListadoProyectos.js","components/proyectos/NuevoProyecto.js","components/layout/Sliderbar.js","components/tareas/FornTarea.js","components/tareas/Tarea.js","components/tareas/ListadoTarea.js","components/proyectos/Proyectos.js","types/index.js","context/proyectos/proyectoReducer.js","config/axios.js","context/proyectos/proyectoState.js","context/tareas/tareaReducer.js","context/tareas/tareaState.js","context/alertas/alertaReducer.js","context/alertas/alertaState.js","context/autentificacion/authReducer.js","config/token.js","context/autentificacion/authState.js","components/rutas/RutaPrivada.js","App.js","reportWebVitals.js","index.js"],"names":["alertaContext","createContext","authContext","Login","props","useContext","AlertaContext","alerta","mostrarAlerta","AuthContext","mensaje","autenticado","iniciarSesion","useEffect","history","push","msg","categoria","useState","email","password","usuario","guardarUsuario","onChange","e","target","name","value","className","onSubmit","preventDefault","trim","htmlFor","type","id","placeholder","to","NuevaCuenta","registrarUsuario","nombre","confirmar","length","Barra","usuarioAutenticado","cerrarSesion","onClick","proyectoContext","tareaContext","Proyecto","proyecto","proyectoActual","ProyectoContext","obtenerTareas","_id","ListadoProyectos","proyectosContext","proyectos","obtenerProyectos","TransitionGroup","map","CSSTransition","timeout","NuevoProyecto","formulario","errorformulario","mostrarFormulario","agregarProyecto","mostrarError","guardarProyecto","Sidebar","FormTarea","tareasContext","tareaseleccionada","errortarea","agregarTarea","validarTarea","actualizarTarea","limpiarTarea","guardarTarea","tarea","Tarea","eliminarTarea","guardarTareaActual","cambiarEstado","estado","seleccionarTarea","ListadoTareas","eliminarProyecto","tareasproyecto","Proyectos","ListadoTarea","FORMULARIO_PROYECTO","OBTENER_PROYECTO","AGREGAR_PROYECTO","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","PROYECTO_ERROR","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","LIMPIAR_TAREA","MOSTRAR_ALERTA","OCULTAR_ALERTA","REGISTRO_EXITOSO","REGISTRO_ERROR","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERROR","CERRAR_SESION","state","action","payload","filter","clienteAxios","axios","create","baseURL","process","ProyectoState","useReducer","proyectoReducer","erroeformulario","dispatch","a","get","resultado","data","post","console","log","proyectoId","delete","Provider","children","TareaState","TareaReducer","params","tareas","put","error","AlertaState","alertaReducer","setTimeout","localStorage","setItem","token","cargando","removeItem","tokenAuth","defaults","headers","common","AuthState","initialState","getItem","usuarios","AuthReducer","datos","respuesta","response","RutaPrivada","Component","component","render","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aafcac15.chunk.js","sourcesContent":["import {createContext} from 'react';\r\n\r\nconst alertaContext = createContext();\r\n\r\nexport default alertaContext;","import {createContext} from 'react';\r\n\r\nconst authContext = createContext();\r\n\r\nexport default authContext;","import React, {useState, useContext, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\nimport AuthContext from '../../context/autentificacion/authContext';\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n     // Extraer los valores del context\r\n    const alertaContext =useContext(AlertaContext);\r\n    const {alerta, mostrarAlerta} = alertaContext;\r\n\r\n    const authContext = useContext(AuthContext);\r\n    const {mensaje, autenticado, iniciarSesion} = authContext;\r\n\r\n    // en caso de que el password o usuario no exista\r\n    useEffect(()=>{\r\n        if(autenticado){\r\n            props.history.push('/proyectos');\r\n        }\r\n        if(mensaje){\r\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n        }\r\n         // eslint-disable-next-line\r\n    },[mensaje, autenticado, props.history]);\r\n    // State para Iniciar Sesión\r\n    const [ usuario, guardarUsuario ] = useState({\r\n        email: '',\r\n        password: '',\r\n    })\r\n    // Extraer el usuario \r\n    const {email, password} = usuario;\r\n\r\n    const onChange = e  => {\r\n        guardarUsuario({\r\n            ...usuario,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    // cuando el usuario quiere iniciar sesion \r\n    const onSubmit = e => {\r\n       e.preventDefault();\r\n\r\n        // Validar que no haya campos vacios\r\n        if(email.trim() === ''||password.trim() === ''){\r\n            mostrarAlerta('Todos los campos son obligatorio', 'alerta-error');\r\n            return;\r\n        }\r\n        // pasarlo al action\r\n        iniciarSesion({email, password});\r\n\r\n    }\r\n\r\n\r\n\r\n    return ( \r\n        <div className=\"form-usuario\">\r\n             {alerta ?(<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>) : null}\r\n            <div className=\"contenedor-form sombra-dark\">\r\n                <h1>Iniciar Sesión</h1>\r\n\r\n            <form\r\n                 onSubmit={onSubmit}\r\n            >\r\n                <div className=\"campo-form\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                        type = \"email\"\r\n                        id = \"email\"\r\n                        name= \"email\"\r\n                        placeholder = \"Tu Email\"\r\n                        value={email}\r\n                        onChange={onChange}               \r\n                    />\r\n                </div>\r\n                 <div className=\"campo-form\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                        type = \"password\"\r\n                        id = \"password\"\r\n                        name= \"password\"\r\n                        placeholder = \"Tu Password\"\r\n                        value = {password}\r\n                        onChange={onChange}               \r\n                    />\r\n                </div>\r\n\r\n                <div className=\"campo-form\">\r\n                    <input type=\"submit\" className=\"btn btn-primario btn-block\" value=\"Iniciar Sesión\"/>\r\n                </div>\r\n\r\n            </form>\r\n            <Link to={'/nueva-cuenta'} className=\"enlace-cuenta\">\r\n                Crear Cuenta\r\n            </Link> \r\n\r\n        </div>\r\n    </div>\r\n     );\r\n}\r\n \r\nexport default Login;","import React, {useState, useContext, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\n\r\nimport AuthContext from '../../context/autentificacion/authContext';\r\n\r\n\r\n\r\nconst NuevaCuenta = (props) => {\r\n\r\n    // Extraer los valores del context\r\n    const alertaContext =useContext(AlertaContext);\r\n    const {alerta, mostrarAlerta} = alertaContext;\r\n\r\n    const authContext = useContext(AuthContext);\r\n    const {mensaje, autenticado, registrarUsuario} = authContext;\r\n\r\n    // en caso de que el usuario se haya autenticado o registrado o sea un registro\r\n    useEffect(()=>{\r\n        if(autenticado){\r\n            props.history.push('/proyectos');\r\n        }\r\n        if(mensaje){\r\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n        }\r\n         // eslint-disable-next-line\r\n    },[mensaje, autenticado, props.history]);\r\n\r\n    // State para Iniciar Sesión\r\n    const [ usuario, guardarUsuario ] = useState({\r\n        nombre: '',\r\n        email: '',\r\n        password: '',\r\n        confirmar: ''\r\n    })\r\n    // Extraer el usuario \r\n    const {nombre, email, password, confirmar} = usuario;\r\n\r\n    const onChange = e  => {\r\n        guardarUsuario({\r\n            ...usuario,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    // cuando el usuario quiere iniciar sesion \r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        // Validar que no haya campos vacios\r\n        if(nombre.trim() === ''||\r\n        email.trim() === ''||\r\n        password.trim() === ''||\r\n        confirmar.trim() === ''){\r\n            mostrarAlerta('Todos los campos son obligatorio', 'alerta-error');\r\n            return;\r\n        }\r\n        // Password minimo de 6 caracteres\r\n        if(password.length< 6){\r\n            mostrarAlerta('El password debe ser de al menos 6 caracteres', 'alerta-error');\r\n            return;\r\n        }\r\n        // Los 2 password son iguales\r\n        if(password !== confirmar){\r\n             mostrarAlerta('Los passwords no son iguales', 'alerta-error');\r\n            return;\r\n        }\r\n        // Pasarlo al action\r\n        registrarUsuario({\r\n            nombre,\r\n            email,\r\n            password\r\n        });\r\n    }\r\n\r\n\r\n\r\n    return ( \r\n        <div className=\"form-usuario\">\r\n            {alerta ?(<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>) : null}\r\n\r\n            <div className=\"contenedor-form sombra-dark\">\r\n                <h1>Registrate</h1>\r\n\r\n            <form\r\n                onSubmit={onSubmit}\r\n            >\r\n\r\n                <div className=\"campo-form\">\r\n                    <label htmlFor=\"email\">Nombre</label>\r\n                    <input\r\n                        type = \"text\"\r\n                        id = \"nombre\"\r\n                        name= \"nombre\"\r\n                        placeholder = \"Tu Nombre\"\r\n                        value={nombre}\r\n                        onChange={onChange}               \r\n                    />\r\n                </div>\r\n\r\n\r\n                <div className=\"campo-form\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                        type = \"email\"\r\n                        id = \"email\"\r\n                        name= \"email\"\r\n                        placeholder = \"Tu Email\"\r\n                        value={email}\r\n                        onChange={onChange}               \r\n                    />\r\n                </div>\r\n                <div className=\"campo-form\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                        type = \"password\"\r\n                        id = \"password\"\r\n                        name= \"password\"\r\n                        placeholder = \"Tu Password\"\r\n                        value = {password}\r\n                        onChange={onChange}               \r\n                    />\r\n                </div>\r\n                 <div className=\"campo-form\">\r\n                    <label htmlFor=\"confirmar\">Confirmar Password</label>\r\n                    <input\r\n                        type = \"password\"\r\n                        id = \"confirmar\"\r\n                        name= \"confirmar\"\r\n                        placeholder = \"Repite tu password\"\r\n                        value = {confirmar}\r\n                        onChange={onChange}               \r\n                    />\r\n                </div>\r\n\r\n                <div className=\"campo-form\">\r\n                    <input type=\"submit\" className=\"btn btn-primario btn-block\" value=\"Registrarme\"/>\r\n                </div>\r\n\r\n            </form>\r\n            <Link to={'/'} className=\"enlace-cuenta\">\r\n               Volver a iniciar Sesión\r\n            </Link> \r\n\r\n        </div>\r\n    </div>\r\n     );\r\n}\r\n \r\nexport default NuevaCuenta;","import React,{useContext, useEffect} from 'react';\r\nimport AuthContext from '../../context/autentificacion/authContext';\r\n\r\nconst Barra = () => {\r\n      // Extraer la information de autentificacion\r\n    const authContext = useContext(AuthContext);\r\n    const {usuario, usuarioAutenticado, cerrarSesion} = authContext;\r\n\r\n    useEffect(()=>{\r\n        usuarioAutenticado();\r\n        \r\n        // eslint-disable-next-line\r\n    }, [])\r\n    \r\n    return ( \r\n        <header className=\"app-header\">\r\n            {usuario ?  <p className=\"nombre-usuario\">Hola <span>{usuario.nombre}</span></p> : null}\r\n           \r\n\r\n            <nav className=\"nav-principal\">\r\n                <button\r\n                    className=\"btn btn-blank cerrar-sesion\"\r\n                    onClick={()=> cerrarSesion()}\r\n                >Cerrar Sesion</button>\r\n            </nav>\r\n        </header>\r\n     );\r\n}\r\n \r\nexport default Barra;","import {createContext} from 'react';\r\n\r\nconst proyectoContext = createContext();\r\n\r\nexport default proyectoContext;","import { createContext } from 'react';\r\n\r\nconst tareaContext = createContext();\r\n\r\nexport default tareaContext;\r\n\r\n\r\n","import React, { useContext } from 'react';\r\nimport ProyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\n\r\n\r\nconst Proyecto = ({proyecto}) => {\r\n\r\n    // Obtener el state de proyecto\r\n    const proyectoContext = useContext(ProyectoContext);\r\n    const {proyectoActual} = proyectoContext;\r\n\r\n    // Obtener la funcion del context de tarea \r\n    const tareasContext = useContext(tareaContext);\r\n    const {obtenerTareas} = tareasContext;\r\n\r\n    // Funcion para agregar el proyecto\r\n    const seleccionarProyecto = id => {\r\n        proyectoActual(id); //fijar un proyecto actual\r\n        obtenerTareas(id); //filtrar las tareas cuando se da click a un proyecto\r\n    }\r\n\r\n    return (  \r\n        <li>\r\n            <button\r\n                type = \"button\"\r\n                className = \"btn btn-blank\"\r\n                onClick = {() => seleccionarProyecto(proyecto._id)}\r\n            >{proyecto.nombre}</button>\r\n\r\n   \r\n        </li>\r\n    );\r\n}\r\n \r\nexport default Proyecto;","import React, { useContext, useEffect } from 'react';\r\nimport Proyecto from './Proyecto';\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\r\nimport ProyectoContext from '../../context/proyectos/proyectoContext';\r\nimport AlertaContext from '../../context/alertas/alertaContext'\r\n\r\nconst ListadoProyectos = () => {\r\n\r\n    // Extraer proyectos de state inicial\r\n    const proyectosContext = useContext(ProyectoContext);\r\n    const {mensaje, proyectos, obtenerProyectos} = proyectosContext;\r\n\r\n    const alertaContext = useContext(AlertaContext);\r\n    const {alerta, mostrarAlerta} = alertaContext;\r\n\r\n    // Obtener proyectos cuando carga el componente\r\n    useEffect(()=>{\r\n        // si hay un error\r\n        if(mensaje){\r\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n        }\r\n\r\n        obtenerProyectos();\r\n        // eslint-disable-next-line\r\n    },[mensaje]);\r\n\r\n     // revisar si proyectos tiene contenido\r\n    if(proyectos.length === 0) return <p>No hay proyectos, comienza creando uno...</p>;\r\n\r\n    return ( \r\n\r\n        <ul className=\"listado-proyectos\">\r\n\r\n            {alerta ?(<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>) : null}\r\n\r\n            <TransitionGroup>\r\n                {proyectos.map(proyecto =>(\r\n                <CSSTransition\r\n                    key={proyecto._id}\r\n                    timeout= {200}\r\n                    className=\"proyecto\"\r\n                >\r\n                    <Proyecto\r\n                    proyecto = {proyecto}\r\n                    />\r\n                </CSSTransition>\r\n                ))}\r\n            </TransitionGroup>\r\n           \r\n            \r\n        </ul>\r\n     );\r\n}\r\n \r\nexport default ListadoProyectos;\r\n","import React,{Fragment, useContext, useState} from 'react';\r\nimport ProyectoContext from '../../context/proyectos/proyectoContext';\r\n\r\n\r\nconst NuevoProyecto = () => {\r\n\r\n    // Obtener el state del formulario\r\n    const proyectoContext = useContext(ProyectoContext);\r\n    const {formulario,errorformulario, mostrarFormulario, agregarProyecto, mostrarError} = proyectoContext;\r\n\r\n\r\n    // State para proyecto\r\n    const [ proyecto, guardarProyecto] = useState({\r\n        nombre:''\r\n    });\r\n\r\n    // Extraer nombre de proyecto\r\n    const {nombre} = proyecto;\r\n    // lee contenido del input\r\n    const onChangeProyecto = e =>{\r\n        guardarProyecto({\r\n            ...proyecto,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    // cuando el usuario encia proyecto\r\n    const onSubmitProyecto = e =>{\r\n        e.preventDefault();\r\n\r\n        //validar el proyecto\r\n        if(nombre === ''){\r\n            mostrarError();\r\n            return;\r\n        }\r\n        //agregar al state \r\n        agregarProyecto(proyecto);\r\n        \r\n        //Reiniciar el form  \r\n        guardarProyecto({\r\n            nombre: ''\r\n        })\r\n    }\r\n\r\n    // Mostrar el formulario\r\n    const onClickFormulario=()=>{\r\n        mostrarFormulario();\r\n    }\r\n\r\n    return ( \r\n        <Fragment>\r\n        <button\r\n            type=\"button\"\r\n            className=\"btn btn-block btn-primario\" \r\n            onClick={onClickFormulario}\r\n        >Nuevo Proyecto</button>\r\n         \r\n         { formulario ?\r\n             (\r\n                <form\r\n                    className=\"formulario-nuevo-proyecto\"\r\n                    onSubmit={onSubmitProyecto}\r\n                >\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"input-text\"\r\n                        placeholder=\"Nombre Proyecto\"\r\n                        name =\"nombre\"\r\n                        value = {nombre}\r\n                        onChange ={onChangeProyecto}\r\n                    />\r\n                    <input\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primario btn-block\"\r\n                        value= \"Agregar Proyecto\"\r\n                    />\r\n                </form>\r\n             ) : null }\r\n\r\n            {errorformulario ? <p className=\"mensaje error\">El Nombre del Proyecto es obligatorio</p> :null}\r\n       \r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default NuevoProyecto;","import React from 'react';\r\nimport ListadoProyectos from '../proyectos/ListadoProyectos';\r\nimport NuevoProyecto from '../proyectos/NuevoProyecto';\r\n\r\nconst Sidebar = () => {\r\n    return ( \r\n        <aside>\r\n            <h1>MERN <span>Tasks</span></h1>\r\n            <NuevoProyecto/>\r\n            <div className=\"proyectos\">\r\n                <h2>Tus Proyectos</h2>\r\n\r\n                <ListadoProyectos/>\r\n                \r\n            </div>\r\n        </aside>\r\n     );\r\n}\r\n \r\nexport default Sidebar;","import React, {useContext, useState, useEffect} from 'react';\r\nimport ProyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\n\r\nconst FormTarea = () => {\r\n\r\n    // Extraer si un proyecto esta activo\r\n    const proyectosContext = useContext(ProyectoContext);\r\n    const {proyecto} = proyectosContext;\r\n    \r\n    // Obtener la funcion del context de tarea \r\n    const tareasContext = useContext(tareaContext);\r\n    const {tareaseleccionada, errortarea, agregarTarea, validarTarea, obtenerTareas, actualizarTarea, limpiarTarea} = tareasContext;\r\n\r\n    // Effect que detecta si hay tarea seleccionada\r\n    useEffect(()=>{\r\n        if(tareaseleccionada !== null){\r\n            guardarTarea(tareaseleccionada);\r\n        }else{\r\n            guardarTarea({\r\n                nombre: ''\r\n            })\r\n        }\r\n    }, [tareaseleccionada]);\r\n\r\n    // State del formulario\r\n    const [tarea, guardarTarea] = useState({\r\n        nombre: ''\r\n    })\r\n\r\n    // extraer el nombre del proyecto\r\n    const {nombre}= tarea;\r\n\r\n\r\n    // Si no hay proyecto seleccionado\r\n    if(!proyecto) return null;\r\n\r\n    // Array destructuring para extraer el proyecto actual\r\n    const [proyectoActual] = proyecto;\r\n\r\n    //Leer los valores del formulario\r\n    const handleChange = e =>{\r\n        guardarTarea ({\r\n            ...tarea,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    } \r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        //Validar\r\n        if(nombre.trim()=== ''){\r\n            validarTarea();\r\n            return;\r\n        }\r\n\r\n        // Revisar si es edicion o es nueva tarea\r\n        if(tareaseleccionada === null){\r\n            // Agregar la nueva tarea sl state de  tarea\r\n            tarea.proyecto = proyectoActual._id;\r\n            agregarTarea(tarea);\r\n        }else {\r\n            // actualizar tarea existente\r\n            actualizarTarea(tarea);\r\n            // Eliminar tarea seleccionada del state\r\n            limpiarTarea(); \r\n        }\r\n\r\n        // Obtener y filtrar las tareas del proyecto actual\r\n        obtenerTareas(proyectoActual.id);\r\n\r\n        // reiniciar el Form\r\n        guardarTarea({\r\n            nombre: ''\r\n        })\r\n    }\r\n\r\n    return (  \r\n        <div className=\"formulario\">\r\n            <form\r\n                onSubmit={onSubmit}\r\n            >\r\n                <div className=\"contenedor-input\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"input-text\"\r\n                        placeholder = \"Nombre tarea...\"\r\n                        name = \"nombre\"\r\n                        value = {nombre}\r\n                        onChange = {handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"contenedor-input\">\r\n                    <input\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primario btn-submit btn-block\"\r\n                        value = {tareaseleccionada ? 'Editar Tarea' : 'Agregar Tarea'}\r\n                       \r\n                    />\r\n                </div>         \r\n            </form>\r\n\r\n            {errortarea ? <p className=\"mensaje error\">El nombre de la tarea es Obligatorio</p> : null}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default FormTarea;\r\n","import React,{useContext} from 'react';\r\n\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\n\r\nconst Tarea = ({tarea}) => {\r\n\r\n    // Extraer si un proyecto esta activo\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const {proyecto} = proyectosContext;\r\n\r\n    // Obtener la funcion del context de tarea \r\n    const tareasContext = useContext(tareaContext);\r\n    const {eliminarTarea, obtenerTareas,actualizarTarea, guardarTareaActual} = tareasContext;\r\n\r\n    // Extraer el proyecto\r\n    const [proyectoActual]= proyecto;\r\n    // Funcion que se ejecuta cuando el usuario presiona boton de eliminar tarea\r\n    const tareaEliminar = id => {\r\n        eliminarTarea(id, proyectoActual._id);\r\n        obtenerTareas(proyectoActual.id);\r\n    }\r\n\r\n    // Funcion qur modifica el estado de tarea\r\n    const cambiarEstado = tarea => {\r\n        if(tarea.estado){\r\n            tarea.estado = false;\r\n        }else{\r\n            tarea.estado = true\r\n        }\r\n        actualizarTarea(tarea);\r\n    }\r\n\r\n    // Agrega una tarea actual cuando el usuario desea aditarla\r\n    const seleccionarTarea = tarea => {\r\n        guardarTareaActual(tarea);\r\n    }\r\n\r\n    return ( \r\n            <li className=\"tarea sombra\">\r\n                <p>{tarea.nombre}</p>\r\n\r\n                <div className=\"estado\">\r\n                    {tarea.estado\r\n                    ?\r\n                        (\r\n                            <button\r\n                                type = \"button\"\r\n                                className=\"completo\"\r\n                                onClick = {() => cambiarEstado(tarea)}\r\n                            >Completado</button>\r\n                        )\r\n\r\n                    :\r\n                         (\r\n                            <button\r\n                                type = \"button\"\r\n                                className=\"incompleto\"\r\n                                onClick = {() => cambiarEstado(tarea)}\r\n                            >Incompleto</button>\r\n                        )\r\n\r\n                    }\r\n                </div>\r\n                <div className=\"acciones\">\r\n                    <button\r\n                        type = \"button\"\r\n                        className=\"btn btn-primario\"\r\n                        onClick = {() => seleccionarTarea(tarea)}\r\n                    >Editar</button>\r\n\r\n                    <button\r\n                        type = \"button\"\r\n                        className=\"btn btn-secundario\"\r\n                        onClick={() => tareaEliminar(tarea._id)}\r\n                    >Eliminar</button>\r\n                </div>\r\n            </li>\r\n         );\r\n}\r\n \r\nexport default Tarea;","import React, {Fragment, useContext} from 'react';\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\r\nimport Tarea from './Tarea';\r\nimport ProyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\n\r\nconst ListadoTareas = () => {\r\n\r\n\r\n     // Extraer proyectos de state inicial\r\n    const proyectosContext = useContext(ProyectoContext);\r\n    const {proyecto, eliminarProyecto} = proyectosContext;\r\n\r\n     // Obtener las tareas del proyecto\r\n    const tareasContext = useContext(tareaContext);\r\n    const {tareasproyecto} = tareasContext;\r\n\r\n    // Si no hay proyecto seleccionado\r\n    if(!proyecto) return <h2>Seleccina un proyecto</h2>;\r\n\r\n    // Array destructuring para extraer el proyecto actual\r\n    const [proyectoActual] = proyecto;\r\n    \r\n\r\n    // Eliminar un proyecto\r\n    const onClickEliminar =()=>{\r\n        eliminarProyecto(proyectoActual.id)\r\n    };\r\n\r\n    return ( \r\n        <Fragment>\r\n            <h2>Proyectos: {proyectoActual.nombre}</h2>\r\n            <ul className=\"listado-tareas\">\r\n                {tareasproyecto.length === 0\r\n                    ? (<li className=\"tarea\"><p>No hay tareas</p></li>)\r\n                    :\r\n                    <TransitionGroup>\r\n                       { tareasproyecto.map(tarea=>(\r\n                        <CSSTransition\r\n                            key = {tarea.id}\r\n                            timeout= {200}\r\n                            className=\"tarea\"\r\n                        >\r\n                             <Tarea\r\n                           \r\n                            tarea={tarea}\r\n                            />\r\n                        </CSSTransition>\r\n                    ))}\r\n                    </TransitionGroup> \r\n                }\r\n            </ul>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-rliminar\"\r\n                onClick={onClickEliminar}\r\n            >Eliminar Proyecto &times;</button>\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default ListadoTareas;","import React, { useContext, useEffect} from 'react';\r\nimport Barra from '../layout/barra';\r\nimport Sidebar from '../layout/Sliderbar';\r\nimport FormTarea from '../tareas/FornTarea';\r\nimport ListadoTareas from '../tareas/ListadoTarea';\r\nimport AuthContext from '../../context/autentificacion/authContext';\r\n\r\nconst Proyectos = () => {\r\n    \r\n    // Extraer la information de autentificacion\r\n    const authContext = useContext(AuthContext);\r\n    const {usuarioAutenticado} = authContext;\r\n\r\n    useEffect(()=>{\r\n        usuarioAutenticado();\r\n\r\n         // eslint-disable-next-line\r\n    }, [])\r\n    return ( \r\n        <div className=\"contenedor-app\">\r\n            <Sidebar/>    \r\n\r\n\r\n            <div className=\"seccion-principal\">\r\n                <Barra/>\r\n\r\n                <main>\r\n                   <FormTarea/> \r\n                    <div className=\"contenedor-tareas\">\r\n                        <ListadoTareas/>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Proyectos;","export const FORMULARIO_PROYECTO = 'FORMULARIO_PROYECTO';\r\nexport const OBTENER_PROYECTO = 'OBTENER_PROYECTO';\r\nexport const AGREGAR_PROYECTO = 'AGREGAR_PROYECTO';\r\nexport const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\r\nexport const PROYECTO_ACTUAL = 'PROYECTO_ACTUAL';\r\nexport const ELIMINAR_PROYECTO = 'ELIMINAR_PROYECTO';\r\nexport const PROYECTO_ERROR = 'PROYECTO_ERROR';\r\n\r\nexport const TAREAS_PROYECTO = 'TAREAS_PROYECTO';\r\nexport const AGREGAR_TAREA = 'AGREGAR_TAREA';\r\nexport const VALIDAR_TAREA = 'VALIDAR_TAREA';\r\nexport const ELIMINAR_TAREA = 'ELIMINAR_TAREA';\r\nexport const TAREA_ACTUAL = 'TAREA_ACTUAL';\r\nexport const ACTUALIZAR_TAREA = 'ACTUALIZAR_TAREA';\r\nexport const LIMPIAR_TAREA = ' LIMPIAR_TAREA';\r\n\r\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\r\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';\r\n\r\nexport const REGISTRO_EXITOSO = 'REGISTRO_EXITOSO';\r\nexport const REGISTRO_ERROR = 'REGISTRO_ERROR';\r\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO';\r\nexport const LOGIN_EXITOSO = 'LOGIN_EXITOSO';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\nexport const CERRAR_SESION = 'CERRAR_SESION';\r\n\r\n\r\n","import {\r\n    FORMULARIO_PROYECTO,\r\n    OBTENER_PROYECTO,\r\n    AGREGAR_PROYECTO,\r\n    PROYECTO_ERROR,\r\n    VALIDAR_FORMULARIO,\r\n    PROYECTO_ACTUAL,\r\n    ELIMINAR_PROYECTO,\r\n    TAREA_ACTUAL\r\n} from '../../types';\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case FORMULARIO_PROYECTO:\r\n            return{\r\n                ...state,\r\n                formulario: true\r\n            }\r\n        case OBTENER_PROYECTO:\r\n            return{\r\n                ...state,\r\n                proyectos:action.payload\r\n            }\r\n        case AGREGAR_PROYECTO:\r\n            return{\r\n                ...state,\r\n                proyectos:[...state.proyectos, action.payload],\r\n                formulario: false,\r\n                errorformulario: false\r\n            }\r\n        case VALIDAR_FORMULARIO:\r\n            return{\r\n                ...state,\r\n                errorformulario: true\r\n            }\r\n        case PROYECTO_ACTUAL:\r\n            return{\r\n                ...state,\r\n                proyecto: state.proyectos.filter(proyecto => proyecto._id=== action.payload)\r\n            }\r\n        case ELIMINAR_PROYECTO:\r\n            return{\r\n                ...state,\r\n                 proyectos: state.proyectos.filter(proyecto => proyecto.id !== action.payload),\r\n                 proyecto: null\r\n            }\r\n        case TAREA_ACTUAL:\r\n            return{\r\n                ...state,\r\n                tareaseleccionada: action.payload\r\n            }\r\n        case PROYECTO_ERROR:\r\n            return{\r\n                ...state,\r\n                mensaje: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import axios from 'axios';\r\n\r\nconst clienteAxios = axios.create({\r\n    baseURL : process.env.REACT_APP_BACKEND_URL\r\n});\r\n\r\nexport default clienteAxios;","import React, { useReducer } from 'react';\r\n\r\nimport proyectoContext from './proyectoContext';\r\nimport proyectoReducer from './proyectoReducer';\r\nimport {\r\n    FORMULARIO_PROYECTO,\r\n    OBTENER_PROYECTO,\r\n    AGREGAR_PROYECTO,\r\n    PROYECTO_ERROR,\r\n    VALIDAR_FORMULARIO,\r\n    PROYECTO_ACTUAL,\r\n    ELIMINAR_PROYECTO    \r\n} from '../../types';\r\n\r\nimport clienteAxios from '../../config/axios';\r\n\r\n\r\nconst ProyectoState = props => {\r\n   \r\n    // const proyectos=[\r\n    // {id: 1, nombre: 'Tienda virtual'},\r\n    // {id: 2, nombre: 'Intranet'},\r\n    // {id: 3, nombre: 'Diseño de Sitio Web'},\r\n    // {id: 4, nombre: 'MERN'}\r\n    // ]\r\n    \r\n    const initialState = {\r\n        proyectos :[],\r\n        formulario: false,\r\n        erroeformulario: false,\r\n        proyecto: null,\r\n        mensaje: null\r\n    }\r\n\r\n    // dispatch para ejecutar las acciones\r\n    const [state, dispatch] = useReducer(proyectoReducer, initialState)\r\n\r\n    // Serie de funciones para e CRUD\r\n    const mostrarFormulario = ()=>{\r\n        dispatch({\r\n            type: FORMULARIO_PROYECTO\r\n        })\r\n    }\r\n\r\n    // Obtener los proyectos\r\n    const obtenerProyectos = async () => {\r\n            try {\r\n                const resultado = await clienteAxios.get('/api/proyectos');\r\n\r\n                dispatch({\r\n                    type: OBTENER_PROYECTO,\r\n                    payload: resultado.data.proyectos\r\n                })\r\n            } catch (error) {\r\n           const alerta ={\r\n                msg: 'Hubo un error',\r\n                categoria: 'alerta-error'\r\n           }\r\n           \r\n            dispatch({\r\n               type: PROYECTO_ERROR,\r\n               payload: alerta\r\n           })\r\n        }\r\n    }\r\n    \r\n    //Agregar un nuevo proyecto \r\n    const agregarProyecto = async proyecto => {\r\n\r\n        try {\r\n           const resultado = await clienteAxios.post('/api/proyectos',  proyecto)\r\n            console.log(resultado);\r\n           // Insertar el proyecto en el state\r\n            dispatch({\r\n                type: AGREGAR_PROYECTO,\r\n                payload: resultado.data\r\n       })\r\n        } catch (error) {\r\n           const alerta ={\r\n                msg: 'Hubo un error',\r\n                categoria: 'alerta-error'\r\n           }\r\n           \r\n            dispatch({\r\n               type: PROYECTO_ERROR,\r\n               payload: alerta\r\n           })\r\n        }\r\n    }\r\n\r\n    // VALIDAR EL FORMULARIO POR ERRORES \r\n    const mostrarError =() => {\r\n        dispatch({\r\n            type: VALIDAR_FORMULARIO\r\n        })\r\n    }\r\n\r\n    // Seleccione el proyecto que el usuario dio click \r\n    const proyectoActual = proyectoId =>{\r\n        dispatch({\r\n            type: PROYECTO_ACTUAL,\r\n            payload: proyectoId\r\n        })\r\n    }\r\n\r\n    // Elimina un proyecto\r\n    const eliminarProyecto = async proyectoId => {\r\n        try {\r\n            await clienteAxios.delete(`/api/proyectos/${proyectoId}`);\r\n            dispatch({\r\n                type:ELIMINAR_PROYECTO,\r\n                payload: proyectoId\r\n            })\r\n        } catch (error) {\r\n           const alerta ={\r\n                msg: 'Hubo un error',\r\n                categoria: 'alerta-error'\r\n           }\r\n           \r\n            dispatch({\r\n               type: PROYECTO_ERROR,\r\n               payload: alerta\r\n           })\r\n        }\r\n    }\r\n\r\n    return(\r\n        <proyectoContext.Provider\r\n            value={{\r\n                proyectos: state.proyectos,\r\n                formulario:state.formulario,\r\n                errorformulario: state.errorformulario,\r\n                proyecto:state.proyecto,\r\n                mensaje: state.mensaje,\r\n                mostrarFormulario,\r\n                obtenerProyectos,\r\n                agregarProyecto,\r\n                mostrarError,\r\n                proyectoActual,\r\n                eliminarProyecto\r\n            }} \r\n        >\r\n            {props.children}\r\n        </proyectoContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ProyectoState;","import { \r\n    TAREAS_PROYECTO,\r\n    AGREGAR_TAREA,\r\n    VALIDAR_TAREA,\r\n    ELIMINAR_TAREA,\r\n    TAREA_ACTUAL,\r\n    ACTUALIZAR_TAREA,\r\n    LIMPIAR_TAREA\r\n } from '../../types';\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case TAREAS_PROYECTO:\r\n            return {\r\n                ...state,\r\n                tareasproyecto:  action.payload\r\n            }\r\n        case AGREGAR_TAREA:\r\n            return {\r\n                ...state,\r\n                tareasproyecto: [action.payload, ...state.tareasproyecto],\r\n                errortarea: false\r\n            }\r\n        case VALIDAR_TAREA:\r\n            return {\r\n                ...state,\r\n                errortarea: true,\r\n            }\r\n        case ELIMINAR_TAREA:\r\n            return {\r\n                ...state,\r\n                tareasproyecto: state.tareasproyecto.filter(tarea=>tarea._id !== action.payload),\r\n            }\r\n        case ACTUALIZAR_TAREA:\r\n            return {\r\n                ...state,\r\n                tareasproyecto: state.tareasproyecto.map(tarea => tarea._id === action.payload._id ? action.payload : tarea)\r\n            }\r\n        case TAREA_ACTUAL:\r\n            return {\r\n                ...state,\r\n                tareaseleccionada: action.payload\r\n            }\r\n        case LIMPIAR_TAREA:\r\n            return{\r\n                ...state,\r\n                tareaseleccionada: null\r\n            }       \r\n        default:\r\n            return state;\r\n    }\r\n}","import React, {useReducer} from 'react';\r\n\r\nimport TareaContext from './tareaContext';\r\nimport TareaReducer from './tareaReducer';\r\nimport clienteAxios from '../../config/axios'\r\n\r\nimport { \r\n    TAREAS_PROYECTO,\r\n    AGREGAR_TAREA,\r\n    VALIDAR_TAREA,\r\n    ELIMINAR_TAREA,\r\n    TAREA_ACTUAL,\r\n    ACTUALIZAR_TAREA,\r\n    LIMPIAR_TAREA\r\n } from '../../types';\r\n\r\nconst TareaState = props => {\r\n    const initialState ={\r\n      \r\n        tareasproyecto: [],\r\n        errortarea: false, \r\n        tareaseleccionada: null\r\n    }\r\n\r\n    // Crear dispatch y state \r\n    const [state, dispatch] = useReducer(TareaReducer, initialState);\r\n\r\n    // Crear Funciones\r\n\r\n    // Obtener las tareas de un proyecto\r\n    const obtenerTareas = async proyecto => {\r\n       \r\n        console.log(proyecto);\r\n\r\n        try {\r\n            const resultado = await clienteAxios.get('/api/tareas', {params: {proyecto}});\r\n            console.log(resultado);\r\n\r\n            dispatch({\r\n            type: TAREAS_PROYECTO,\r\n            payload: resultado.data.tareas\r\n            \r\n        })\r\n       } catch (error) {\r\n           console.log(error);\r\n       }\r\n    }\r\n\r\n    // Agregar uan tarea al proyecto seleccionado\r\n    const agregarTarea = async tarea => {\r\n    \r\n        try {\r\n            const resultado = await clienteAxios.post('/api/tareas', tarea);\r\n            console.log(resultado);\r\n            dispatch({\r\n                type: AGREGAR_TAREA,\r\n                payload: tarea\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    // Valida y muesta error en caso de que sea necesario\r\n    const validarTarea = ()=>{\r\n        dispatch({\r\n            type: VALIDAR_TAREA\r\n        })\r\n    }\r\n\r\n    // Eliminar tarea por Id\r\n    const eliminarTarea = (id, proyecto) => {\r\n        try {\r\n            clienteAxios.delete(`/api/tareas/${id}`, {params: {proyecto}});\r\n            dispatch({\r\n                type: ELIMINAR_TAREA,\r\n                payload: id\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    // Editar o Modificar tarea\r\n    const actualizarTarea =  async tarea => {\r\n       \r\n       try {\r\n            const resultado = await clienteAxios.put(`/api/tareas/${tarea._id}`, tarea);\r\n            console.log(resultado);\r\n\r\n            dispatch({\r\n                type: ACTUALIZAR_TAREA,\r\n                payload: resultado.data.tarea\r\n            })\r\n       } catch (error) {\r\n           console.log(error);\r\n       }\r\n    }\r\n\r\n    // Extrae una tarea para edicion\r\n    const guardarTareaActual = tarea =>{\r\n        dispatch({\r\n            type: TAREA_ACTUAL,\r\n            payload: tarea\r\n        })\r\n    }\r\n\r\n\r\n\r\n    // Elimina la tarea seleccionada\r\n    const limpiarTarea = ()=>{\r\n        dispatch({\r\n            type: LIMPIAR_TAREA\r\n        })\r\n    }\r\n\r\n    return(\r\n        <TareaContext.Provider\r\n            value= {{\r\n\r\n                tareasproyecto: state.tareasproyecto,\r\n                errortarea: state.errortarea,\r\n                tareaseleccionada: state.tareaseleccionada,\r\n                obtenerTareas, \r\n                agregarTarea,\r\n                validarTarea,\r\n                eliminarTarea,\r\n                guardarTareaActual,\r\n                actualizarTarea,\r\n                limpiarTarea\r\n            }}\r\n        >\r\n            {props.children}\r\n        </TareaContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TareaState;","import {MOSTRAR_ALERTA, OCULTAR_ALERTA} from '../../types';\r\n\r\nexport default (state, action)=>{\r\n    switch(action.type){\r\n        case MOSTRAR_ALERTA:\r\n            return{\r\n               alerta: action.payload \r\n            }\r\n        case OCULTAR_ALERTA:\r\n            return{\r\n                alerta:null,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React,{useReducer} from 'react';\r\nimport alertaReducer from './alertaReducer';\r\nimport alertaContext from './alertaContext';\r\n\r\nimport {MOSTRAR_ALERTA, OCULTAR_ALERTA} from '../../types';\r\n\r\nconst AlertaState = props => {\r\n    const initialState={\r\n        alerta:null\r\n    }\r\n    const[state, dispatch]= useReducer(alertaReducer, initialState);\r\n    \r\n    //Funciones\r\n    const mostrarAlerta = (msg, categoria)=>{\r\n        dispatch({\r\n            type: MOSTRAR_ALERTA,\r\n            payload:{\r\n                msg,\r\n                categoria\r\n            }\r\n        });\r\n        // Despues de 5 segundos limpiar la alerta \r\n        setTimeout(()=>{\r\n            dispatch({\r\n                type:OCULTAR_ALERTA\r\n            })\r\n        },5000);\r\n    }\r\n\r\n\r\n    return (\r\n        <alertaContext.Provider\r\n            value={{\r\n                alerta: state.alerta,\r\n                mostrarAlerta\r\n            }}\r\n        >\r\n            {props.children}\r\n        </alertaContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AlertaState;","import {REGISTRO_EXITOSO,\r\n    REGISTRO_ERROR,\r\n    OBTENER_USUARIO,\r\n    LOGIN_EXITOSO,\r\n    LOGIN_ERROR,\r\n    CERRAR_SESION\r\n} from '../../types';\r\n\r\nexport default (state, action)=>{\r\n    switch(action.type){\r\n        case REGISTRO_EXITOSO:\r\n        case LOGIN_EXITOSO:\r\n            localStorage.setItem('token', action.payload.token);\r\n            return{\r\n                ...state,\r\n                autenticado: true,\r\n                mensaje: null,\r\n                cargando: false,\r\n            }\r\n        case OBTENER_USUARIO:\r\n            return {\r\n                ...state,\r\n                autenticado: true,\r\n                usuario: action.payload,\r\n                cargando: false,\r\n            }\r\n        case CERRAR_SESION:\r\n        case LOGIN_ERROR:\r\n        case REGISTRO_ERROR:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                usuario: null,\r\n                autenticado: null,\r\n                mensaje: action.payload, \r\n                cargando: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import clienteAxios from './axios';\r\n\r\nconst tokenAuth = token => {\r\n    if(token){\r\n        clienteAxios.defaults.headers.common['x-auth-token'] = token;\r\n    }else{\r\n        delete clienteAxios.defaults.headers.common['x-auth-token'];\r\n    }\r\n}\r\n\r\nexport default tokenAuth;","import React, {useReducer} from 'react';\r\nimport AuthContext from './authContext';\r\nimport AuthReducer from './authReducer';\r\n\r\nimport clienteAxios from '../../config/axios';\r\nimport tokenAuth from '../../config/token';\r\n\r\nimport {REGISTRO_EXITOSO,\r\n    REGISTRO_ERROR,\r\n    OBTENER_USUARIO,\r\n    LOGIN_EXITOSO,\r\n    LOGIN_ERROR,\r\n    CERRAR_SESION\r\n} from '../../types';\r\n\r\nconst AuthState = props => {\r\n    const initialState ={\r\n        token: localStorage.getItem('token'),\r\n        autenticado: null,\r\n        usuarios: null,\r\n        mensaje: null,\r\n        cargando: true,\r\n    }\r\n    const [state, dispatch] = useReducer(AuthReducer, initialState);\r\n\r\n    const registrarUsuario = async datos => {\r\n        try {\r\n            const respuesta = await clienteAxios.post('/api/usuarios', datos);\r\n            console.log(respuesta.data);\r\n            dispatch({\r\n                type: REGISTRO_EXITOSO,\r\n                payload: respuesta.data\r\n            });\r\n\r\n            // Obtener usuario\r\n            usuarioAutenticado();\r\n\r\n        } catch (error) {\r\n            // console.log(error.response.data.msg);\r\n            const alerta = {\r\n                msg: error.response.data.msg,\r\n                categoria: 'alerta-error'\r\n            }\r\n            dispatch({\r\n                type: REGISTRO_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n    }\r\n\r\n    // Retornar usuario autenticado\r\n    const usuarioAutenticado = async() =>{\r\n        const token = localStorage.getItem('token');\r\n        if(token){\r\n            tokenAuth(token);\r\n\r\n        }\r\n        try {\r\n            const respuesta = await clienteAxios.get('/api/auth');\r\n            // console.log(respuesta);\r\n            dispatch({\r\n                type: OBTENER_USUARIO,\r\n                payload: respuesta.data.usuario\r\n            });\r\n        } catch (error) {\r\n            console.log(error.response);\r\n            dispatch({\r\n               type:LOGIN_ERROR\r\n           }) \r\n        }\r\n    }\r\n\r\n    // cuando el usuario inicia session\r\n    const iniciarSesion = async datos =>{\r\n        try {\r\n            const respuesta = await clienteAxios.post('/api/auth', datos);\r\n            dispatch({\r\n                type: LOGIN_EXITOSO,\r\n                payload: respuesta.data,\r\n            });\r\n            // Obtener el usuario\r\n            usuarioAutenticado();\r\n        } catch (error) {\r\n            console.log(error.response.data.msg);\r\n            const alerta = {\r\n                msg: error.response.data.msg,\r\n                categoria: 'alerta-error'\r\n            }\r\n            dispatch({\r\n                type: LOGIN_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n    }\r\n\r\n    // cierra la sesion del usuario\r\n    const cerrarSesion=()=>{\r\n        dispatch({\r\n            type: CERRAR_SESION\r\n        })\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                token: state.token,\r\n                autenticado: state.autenticado,\r\n                usuario: state.usuario,\r\n                mensaje: state.mensaje,\r\n                cargando: state.cargando,\r\n                registrarUsuario,\r\n                iniciarSesion,\r\n                usuarioAutenticado,\r\n                cerrarSesion\r\n            }}\r\n        >{props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthState;","import React, { useContext, useEffect} from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport AuthContext from '../../context/autentificacion/authContext';\r\n\r\nconst RutaPrivada = ({component: Component, ...props}) => {\r\n    \r\n    const authContext = useContext(AuthContext);\r\n    const {autenticado, cargando, usuarioAutenticado} = authContext;\r\n    \r\n    useEffect(()=>{\r\n        usuarioAutenticado();\r\n\r\n        // eslint-disable-next-line \r\n    },[]);\r\n\r\n    return ( \r\n        <Route {...props} render={props => !autenticado && !cargando ? (\r\n            <Redirect to=\"/\"/>\r\n        ) : (\r\n            <Component {...props}/>\r\n        )} />\r\n\r\n     );\r\n}\r\n \r\nexport default RutaPrivada;","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Login from './components/auth/Login';\nimport NuevaCuenta from './components/auth/NuevaCuenta';\nimport Proyectos from './components/proyectos/Proyectos';\nimport ProyectoState from './context/proyectos/proyectoState';\nimport TareaState from './context/tareas/tareaState';\nimport AlertaState from './context/alertas/alertaState';\nimport AuthState from './context/autentificacion/authState';\nimport tokenAuth from './config/token';\nimport RutaPrivada from './components/rutas/RutaPrivada';\n\n\n// Revisar si tenemos un token\nconst token = localStorage.getItem('token');\nif(token) {\n  tokenAuth(token);\n}\n\nfunction App() {\n  \n  return (\n    <ProyectoState>\n      <TareaState>\n        <AlertaState>\n          <AuthState>\n            <Router>\n              <Switch>\n                <Route exact path=\"/\" component={Login}/>\n                <Route exact path=\"/nueva-cuenta\" component={NuevaCuenta}/>\n                <RutaPrivada exact path=\"/proyectos\" component={Proyectos}/>\n              </Switch>\n            </Router>\n          </AuthState>\n        </AlertaState>\n      </TareaState>\n    </ProyectoState>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}